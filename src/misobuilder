#!/bin/bash
#
# IsoBuilder for TinyCore64
#
# alphons@heijden.com
#
#

source isobuilder

function Menu()
{
  BACKTITLE="$1"
  TITLE="$2"
  exec 3>&1
  selection=$(dialog \
    --backtitle "$BACKTITLE" \
    --title "$TITLE" \
    --clear \
    --cancel-label "Exit" \
    --menu "Please select:" 0 0 0 "${menu[@]}" 2>&1 1>&3)
  exit_status=$?
  exec 3>&-
}


menu=("0" "make allnoconfig (!!! better use your own .config file !!!)" \
"c" "make mrproper" \
"C" "List and select predefined config files" \
"r" "Re-configure using make menuconfig" \
"k" "make bzImage_(kernel)" \
"m" "make modules" \
"i" "Install Kernel and Modules" \
"n" "Make new ISO" \
"p" "Purge extraction" \
"x" "ISO extract" \
"v" "Show Variables" \
"w" "install all packages for the build system" \
"s" "Make ISO FS (modules64.gz, rootfs64.gz or corepure64.gz) and vmlinuz64" \
"a" "Making a new initrd" \
"b" "Make BusyBox")

while :
do
  Menu "$ISOBUILDER" "main menu"
  
  if [[ $exit_status != 0 ]]; then echo "$exit_status" ; clear ; exit 0 ; fi

  case  ${selection}  in
    c) MrProper ;;
    0) MakeNoConfig ;;
    C) SelectPreConfig ;;
    r) Reconfigure ;;
    k) MakeKernel ;;
    m) MakeModules ;;
    i) Install ;;
    n) MakeNewIso ;;
    p) PurgeExtraction ;;
    x) IsoExtract ;;
    v) ShowVars ;;
    w) LoadPackages ;;
    s) MakeISOFS ;;
    b) MakeBusyBox ;;
    a) MakeNewInitRd ;;
  esac 
done
